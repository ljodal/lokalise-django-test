name: Translations

on: 
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]
    paths:
      - '**.po'

env:
  PYTHON_VERSION: "3.10"
  POETRY_VERSION: "1.1.12"
  POETRY_HOME: "~/.poetry"

concurrency:
  group: translations-${{ github.event.pull_request.number }}
  cancel-in-progress: false # Let previous job complete

jobs:

  # Upload translations to Lokalise when the "needs translations" label is
  # added. We only run this when the label is added because any changes made in
  # Lokalise will be overwritten if this runs multiple times.
  upload-to-lokalise:
    name: Upload translations
    runs-on: ubuntu-latest
    if: ${{ github.event.action == 'labeled' && github.event.label.name == 'needs translations' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Fetch base commit
        run: git fetch --depth=1 origin "${{ github.event.pull_request.base.sha }}"
      - name: Setup project
        uses: ./.github/actions/setup-project
      - name: Upload translations
        run: |
          ./bin/translations upload project/locale \
            --base-commit "${{ github.event.pull_request.base.sha }}" \
            --lokalise-api-token "${{ secrets.LOKALISE_API_TOKEN }}"  \
            --lokalise-project-id "${{ secrets.LOKALISE_PROJECT_ID }}"  \
            --lokalise-tag "user:${{ github.event.pull_request.user.login }}" \
            --lokalise-tag "pr:${{ github.event.pull_request.number }}"
      - name: Comment on PR
        uses: actions/github-script@v5
        with:
          script: |
            const markerComment = "<!-- translations bot -->";

            const issue_number = context.payload.pull_request.number;
            const runLink = `${context.serverUrl}/${context.payload.repository.full_name}/actions/runs/${context.runId}`;

            const commentText = `
            Your translations have been uploaded to Lokalise, we will notify you when they are ready.

            _This comment was posted by [this workflow](${runLink})._

            ${markerComment}
            `;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: commentText,
            });

  # Download translations from Lokalise when the "needs translations" label is
  # removed. This is only run once, when the label is removed, because we don't
  # want to accidentally override developers work-in-progress.
  download-from-lokalise:
    name: Download translations
    runs-on: ubuntu-latest
    # Only run when the "needs translations" label is removed
    if: ${{ github.event.action == 'unlabeled' && github.event.label.name == 'needs translations' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
      - name: Setup project
        uses: ./.github/actions/setup-project
      - name: Download translations
        run: |
          ./bin/translations download --output project/locale . \
            --lokalise-api-token "${{ secrets.LOKALISE_API_TOKEN }}"  \
            --lokalise-project-id "${{ secrets.LOKALISE_PROJECT_ID }}"
      - name: Check for changes
        id: check
        run: |
          if [[ `git status --porcelain --untracked-files=no` ]]; then
            echo "::set-output name=has_changes::true"
          else
            echo "::set-output name=has_changes::false"
          fi
      - name: Configure git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      - name: Commit changes (if any)
        if: steps.check.outputs.has_changes == 'true'
        run: |
          git add -u
          git commit -m "Add translations from Lokalise"
          git push
      - name: Comment on PR
        uses: actions/github-script@v5
        with:
          script: |
            const markerComment = "<!-- translations bot -->";

            const issue_number = context.payload.pull_request.number;
            const runLink = `${context.serverUrl}/${context.payload.repository.full_name}/actions/runs/${context.runId}`;

            const commentText = `
            Hi @${{ github.event.pull_request.user.login }}! Your translations are now ready and commited to the pull request.

            _This comment was posted by [this workflow](${runLink})._

            ${markerComment}
            `;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: commentText,
            });

  # Comment on the PR if it contains changes to .po files. The comment is there
  # to tell developers how the process is to get translations ready.
  comment:
    name: Comment on PR
    runs-on: ubuntu-latest
    if: ${{ contains('opened synchronize reopened', github.event.action) && !contains(github.event.pull_request.labels.*.name, 'needs translations') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Fetch base commit
        run: git fetch --depth=1 origin "${{ github.event.pull_request.base.sha }}"
      - name: Setup project
        uses: ./.github/actions/setup-project
      - name: Compare translations and comment on PR
        run: |
          ./bin/translations compare ./project \
            --base-commit "${{ github.event.pull_request.base.sha }}" \
            --github-access-token "${{ secrets.GITHUB_TOKEN }}" \
            --github-repo "${{ github.repository }}" \
            --github-pull-number "${{ github.event.pull_request.number }}" \
            --github-workflow-link "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
